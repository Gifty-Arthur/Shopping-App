{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport React from 'react';\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StatusBar from \"react-native-web/dist/exports/StatusBar\";\nimport TouchableOpacity from \"react-native-web/dist/exports/TouchableOpacity\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport ScrollView from \"react-native-web/dist/exports/ScrollView\";\nimport UIManager from \"react-native-web/dist/exports/UIManager\";\nimport LayoutAnimation from \"react-native-web/dist/exports/LayoutAnimation\";\nimport BackHandler from \"react-native-web/dist/exports/BackHandler\";\nimport styles from \"../stylesheet/LoginSignup\";\nimport SignupForm from \"../components/SignupForm\";\nimport SigninForm from \"../components/SignInForm\";\n\nvar Auth = function (_React$Component) {\n  _inherits(Auth, _React$Component);\n\n  var _super = _createSuper(Auth);\n\n  function Auth(props) {\n    var _this;\n\n    _classCallCheck(this, Auth);\n\n    _this = _super.call(this, props);\n\n    _this.handleBackPress = function () {\n      return false;\n    };\n\n    _this.NavigateForm = function (method) {\n      var CustomLayoutLinear = {\n        duration: 300,\n        create: {\n          type: LayoutAnimation.Types.linear,\n          property: LayoutAnimation.Properties.opacity\n        },\n        update: {\n          type: LayoutAnimation.Types.linear,\n          property: LayoutAnimation.Properties.opacity\n        }\n      };\n      LayoutAnimation.configureNext(CustomLayoutLinear);\n\n      if (method === 'SignUp') {\n        _this.setState({\n          IsOpenTab: 'SignUp'\n        });\n      } else {\n        _this.setState({\n          IsOpenTab: 'SignIn'\n        });\n      }\n    };\n\n    _this.state = {\n      IsOpenTab: 'SignIn'\n    };\n    UIManager.setLayoutAnimationEnabledExperimental && UIManager.setLayoutAnimationEnabledExperimental(true);\n    return _this;\n  }\n\n  _createClass(Auth, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      BackHandler.addEventListener('hardwareBackPress', this.handleBackPress);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      BackHandler.removeEventListener('hardwareBackPress', this.handleBackPress);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      return React.createElement(ScrollView, {\n        style: styles.container,\n        keyboardShouldPersistTaps: \"always\"\n      }, React.createElement(StatusBar, {\n        backgroundColor: \"#2c8ba6\",\n        barStyle: \"light-content\"\n      }), React.createElement(View, {\n        style: styles.TopLogoArea\n      }, React.createElement(ImageBackground, {\n        source: require(\"../assets/Signin.jpg\"),\n        style: styles.TopLogoAreaBackground\n      }, React.createElement(View, {\n        style: {\n          paddingTop: 20\n        }\n      }, React.createElement(Image, {\n        source: require(\"../assets/Signin.jpg\"),\n        resizeMode: \"contain\",\n        style: {\n          width: 150,\n          height: 150\n        }\n      })), React.createElement(View, {\n        style: {\n          flexDirection: 'row'\n        }\n      }, this.state.IsOpenTab === 'SignIn' ? React.createElement(View, {\n        style: styles.TabArea\n      }, React.createElement(View, {\n        style: styles.TabActiveArea\n      }, React.createElement(Text, {\n        style: styles.TabActiveLable\n      }, \"SIGN IN\"), React.createElement(View, {\n        style: styles.TabActiveLine\n      }))) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.NavigateForm('SignIn');\n        },\n        activeOpacity: 0.8,\n        style: styles.TabArea\n      }, React.createElement(Text, {\n        style: styles.TabDeactiveLable\n      }, \"SIGN IN\")), React.createElement(View, {\n        style: styles.TabArea\n      }, React.createElement(Text, {\n        style: {\n          color: '#2dc7b0',\n          fontWeight: 'bold',\n          fontSize: 12\n        }\n      }, \"OR\")), this.state.IsOpenTab === 'SignUp' ? React.createElement(View, {\n        style: styles.TabArea\n      }, React.createElement(View, {\n        style: styles.TabActiveArea\n      }, React.createElement(Text, {\n        style: styles.TabActiveLable\n      }, \"SIGN UP\"), React.createElement(View, {\n        style: styles.TabActiveLine\n      }))) : React.createElement(TouchableOpacity, {\n        onPress: function onPress() {\n          return _this2.NavigateForm('SignUp');\n        },\n        activeOpacity: 0.8,\n        style: styles.TabArea\n      }, React.createElement(Text, {\n        style: styles.TabDeactiveLable\n      }, \"SIGN UP\"))))), React.createElement(View, {\n        style: {\n          paddingVertical: 40\n        }\n      }, this.state.IsOpenTab === 'SignIn' ? React.createElement(SigninForm, {\n        navigation: this.props.navigation\n      }) : React.createElement(SignupForm, {\n        navigation: this.props.navigation\n      })));\n    }\n  }]);\n\n  return Auth;\n}(React.Component);\n\nAuth.navigationOptions = {\n  header: null\n};\nexport { Auth as default };","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/Shopping-App/src/view/screens/signInScreen.js"],"names":["React","styles","SignupForm","SigninForm","Auth","props","handleBackPress","NavigateForm","method","CustomLayoutLinear","duration","create","type","LayoutAnimation","Types","linear","property","Properties","opacity","update","configureNext","setState","IsOpenTab","state","UIManager","setLayoutAnimationEnabledExperimental","BackHandler","addEventListener","removeEventListener","container","TopLogoArea","require","TopLogoAreaBackground","paddingTop","width","height","flexDirection","TabArea","TabActiveArea","TabActiveLable","TabActiveLine","TabDeactiveLable","color","fontWeight","fontSize","paddingVertical","navigation","Component","navigationOptions","header"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { View, Text, StatusBar, TouchableOpacity, ImageBackground, Image, ScrollView, UIManager, LayoutAnimation, BackHandler  } from 'react-native'\r\nimport styles from '../stylesheet/LoginSignup';\r\nimport SignupForm from '../components/SignupForm';\r\nimport SigninForm from '../components/SignInForm';\r\n\r\nexport default class Auth extends React.Component {\r\n\r\n    static navigationOptions = {\r\n        header: null\r\n    };\r\n\r\n    constructor(props)\r\n    {\r\n        super(props);\r\n        this.state = {\r\n            IsOpenTab : 'SignIn',   //  'SignIn', 'SignUp' OR 'ResetPassword'\r\n        };\r\n        UIManager.setLayoutAnimationEnabledExperimental &&\r\n        UIManager.setLayoutAnimationEnabledExperimental(true);\r\n        // LayoutAnimation.spring();\r\n    }\r\n\r\n    componentDidMount() {\r\n        BackHandler.addEventListener('hardwareBackPress', this.handleBackPress);\r\n    }\r\n    componentWillUnmount() {\r\n        BackHandler.removeEventListener('hardwareBackPress', this.handleBackPress);\r\n    }\r\n\r\n    handleBackPress = () => {\r\n        return false;\r\n    };\r\n\r\n    render() {\r\n\r\n        return (\r\n\r\n            <ScrollView style={styles.container} keyboardShouldPersistTaps='always'>\r\n\r\n                <StatusBar backgroundColor='#2c8ba6' barStyle='light-content' />\r\n\r\n                <View style={styles.TopLogoArea}>\r\n\r\n                    <ImageBackground source={require('../assets/Signin.jpg')} style={styles.TopLogoAreaBackground}>\r\n\r\n                        <View style={{paddingTop: 20}}>\r\n\r\n                            <Image source={require('../assets/Signin.jpg')} resizeMode='contain' style={{width: 150, height: 150,}}/>\r\n\r\n                        </View>\r\n\r\n                        <View style={{flexDirection:'row'}}>\r\n\r\n\r\n\r\n                                {\r\n                                    this.state.IsOpenTab === 'SignIn' ? <View style={styles.TabArea}><View style={styles.TabActiveArea}><Text style={styles.TabActiveLable}>SIGN IN</Text><View style={styles.TabActiveLine}/></View></View> : <TouchableOpacity onPress={()=>this.NavigateForm('SignIn')} activeOpacity={0.8} style={styles.TabArea}><Text style={styles.TabDeactiveLable}>SIGN IN</Text></TouchableOpacity>\r\n                                }\r\n\r\n\r\n\r\n                            <View style={styles.TabArea}>\r\n\r\n                                <Text style={{color:'#2dc7b0', fontWeight:'bold', fontSize: 12}}>OR</Text>\r\n\r\n                            </View>\r\n\r\n\r\n\r\n                                {\r\n                                    this.state.IsOpenTab === 'SignUp' ? <View style={styles.TabArea}><View style={styles.TabActiveArea}><Text style={styles.TabActiveLable}>SIGN UP</Text><View style={styles.TabActiveLine}/></View></View> : <TouchableOpacity onPress={()=>this.NavigateForm('SignUp')} activeOpacity={0.8} style={styles.TabArea}><Text style={styles.TabDeactiveLable}>SIGN UP</Text></TouchableOpacity>\r\n                                }\r\n\r\n\r\n\r\n                        </View>\r\n\r\n                    </ImageBackground>\r\n\r\n                </View>\r\n\r\n                <View style={{paddingVertical:40,}}>\r\n\r\n                    {\r\n                        this.state.IsOpenTab === 'SignIn' ? <SigninForm navigation={this.props.navigation} /> : <SignupForm  navigation={this.props.navigation} />\r\n                    }\r\n\r\n                </View>\r\n\r\n\r\n            </ScrollView>\r\n\r\n        );\r\n    }\r\n\r\n    NavigateForm = (method) => {\r\n\r\n        const CustomLayoutLinear = {\r\n            duration: 300,\r\n            create: {\r\n                type: LayoutAnimation.Types.linear,\r\n                property: LayoutAnimation.Properties.opacity,\r\n            },\r\n            update: {\r\n                type: LayoutAnimation.Types.linear,\r\n                property: LayoutAnimation.Properties.opacity,\r\n            },\r\n        };\r\n        LayoutAnimation.configureNext(CustomLayoutLinear );\r\n\r\n        if(method === 'SignUp'){\r\n            this.setState({\r\n                IsOpenTab : 'SignUp',\r\n            });\r\n        }else{\r\n            this.setState({\r\n                IsOpenTab : 'SignIn',\r\n            });\r\n        }\r\n\r\n    }\r\n\r\n}"]},"metadata":{},"sourceType":"module"}