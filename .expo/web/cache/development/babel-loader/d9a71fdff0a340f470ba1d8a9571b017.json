{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) { symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); } keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Inputs from \"../view/screens/signInScreen\";\n\nvar LoginForm = function LoginForm() {\n  var _React$useState = React.useState({\n    email: {\n      value: \"\",\n      valid: false,\n      type: \"textinput\",\n      rules: {\n        isRequired: true,\n        isEmail: true\n      }\n    },\n    password: {\n      value: \"\",\n      valid: false,\n      type: \"textinput\",\n      rules: {\n        isRequired: true,\n        minLength: true\n      }\n    }\n  }),\n      _React$useState2 = _slicedToArray(_React$useState, 2),\n      formData = _React$useState2[0],\n      setForm = _React$useState2[1];\n\n  var handleChange = function handleChange() {\n    setForm(_objectSpread({}, formData));\n    console.log(formData.email);\n  };\n\n  return React.createElement(View, null, React.createElement(Text, null, \"Login\"), React.createElement(Inputs, {\n    placeholder: \"Enter email address\",\n    placeholdercolor: \"red\",\n    autoCapitalize: \"none\",\n    keyboardType: \"email-address\",\n    onChangeText: function onChangeText(value) {\n      return handleChange(\"email\", value);\n    },\n    value: formData.email.value,\n    type: formData.email.type\n  }), React.createElement(Inputs, {\n    placeholder: \"Password\",\n    placeholdercolor: \"red\",\n    autoCapitalize: \"none\",\n    type: formData.password.type,\n    value: formData.password.value,\n    onChangeText: function onChangeText(value) {\n      return setForm(\"password\", value);\n    }\n  }));\n};\n\nexport default LoginForm;","map":{"version":3,"sources":["C:/Users/pc/Documents/GitHub/Shopping-App/src/view/screens/signInScreen.js"],"names":["React","Inputs","LoginForm","useState","email","value","valid","type","rules","isRequired","isEmail","password","minLength","formData","setForm","handleChange","console","log"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;AAEA,OAAOC,MAAP;;AACA,IAAMC,SAAS,GAAG,SAAZA,SAAY,GAAM;AACxB,wBAA4BF,KAAK,CAACG,QAAN,CAAe;AACvCC,IAAAA,KAAK,EAAE;AACLC,MAAAA,KAAK,EAAE,EADF;AAELC,MAAAA,KAAK,EAAE,KAFF;AAGLC,MAAAA,IAAI,EAAE,WAHD;AAILC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,IADP;AAELC,QAAAA,OAAO,EAAE;AAFJ;AAJF,KADgC;AAUvCC,IAAAA,QAAQ,EAAE;AACRN,MAAAA,KAAK,EAAE,EADC;AAERC,MAAAA,KAAK,EAAE,KAFC;AAGRC,MAAAA,IAAI,EAAE,WAHE;AAIRC,MAAAA,KAAK,EAAE;AACLC,QAAAA,UAAU,EAAE,IADP;AAELG,QAAAA,SAAS,EAAE;AAFN;AAJC;AAV6B,GAAf,CAA5B;AAAA;AAAA,MAAOC,QAAP;AAAA,MAAiBC,OAAjB;;AAoBE,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBD,IAAAA,OAAO,mBAAMD,QAAN,EAAP;AACAG,IAAAA,OAAO,CAACC,GAAR,CAAYJ,QAAQ,CAACT,KAArB;AACD,GAHD;;AAKA,SACE,oBAAC,IAAD,QACE,oBAAC,IAAD,gBADF,EAEE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,qBADd;AAEE,IAAA,gBAAgB,EAAC,KAFnB;AAGE,IAAA,cAAc,EAAE,MAHlB;AAIE,IAAA,YAAY,EAAE,eAJhB;AAKE,IAAA,YAAY,EAAE,sBAAAC,KAAK;AAAA,aAAIU,YAAY,CAAC,OAAD,EAAUV,KAAV,CAAhB;AAAA,KALrB;AAME,IAAA,KAAK,EAAEQ,QAAQ,CAACT,KAAT,CAAeC,KANxB;AAOE,IAAA,IAAI,EAAEQ,QAAQ,CAACT,KAAT,CAAeG;AAPvB,IAFF,EAWE,oBAAC,MAAD;AACE,IAAA,WAAW,EAAC,UADd;AAEE,IAAA,gBAAgB,EAAC,KAFnB;AAGE,IAAA,cAAc,EAAE,MAHlB;AAIE,IAAA,IAAI,EAAEM,QAAQ,CAACF,QAAT,CAAkBJ,IAJ1B;AAKE,IAAA,KAAK,EAAEM,QAAQ,CAACF,QAAT,CAAkBN,KAL3B;AAME,IAAA,YAAY,EAAE,sBAAAA,KAAK;AAAA,aAAIS,OAAO,CAAC,UAAD,EAAaT,KAAb,CAAX;AAAA;AANrB,IAXF,CADF;AAsBD,CAhDD;;AAkDA,eAAeH,SAAf","sourcesContent":["import React from \"react\";\r\nimport { View, Button, Text } from \"react-native\";\r\nimport Inputs from \"../view/screens/signInScreen\";\r\nconst LoginForm = () => {\r\nconst [formData, setForm] = React.useState({\r\n    email: {\r\n      value: \"\",\r\n      valid: false,\r\n      type: \"textinput\",\r\n      rules: {\r\n        isRequired: true,\r\n        isEmail: true\r\n      }\r\n    },\r\n    password: {\r\n      value: \"\",\r\n      valid: false,\r\n      type: \"textinput\",\r\n      rules: {\r\n        isRequired: true,\r\n        minLength: true\r\n      }\r\n    }\r\n  });\r\n  const handleChange = () => {\r\n    setForm({ ...formData });\r\n    console.log(formData.email);\r\n  };\r\n\r\n  return (\r\n    <View>\r\n      <Text>Login</Text>\r\n      <Inputs\r\n        placeholder=\"Enter email address\"\r\n        placeholdercolor=\"red\"\r\n        autoCapitalize={\"none\"}\r\n        keyboardType={\"email-address\"}\r\n        onChangeText={value => handleChange(\"email\", value)}\r\n        value={formData.email.value}\r\n        type={formData.email.type}\r\n      />\r\n      <Inputs\r\n        placeholder=\"Password\"\r\n        placeholdercolor=\"red\"\r\n        autoCapitalize={\"none\"}\r\n        type={formData.password.type}\r\n        value={formData.password.value}\r\n        onChangeText={value => setForm(\"password\", value)}\r\n      />\r\n    </View>\r\n  );\r\n};\r\n\r\nexport default LoginForm;\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}